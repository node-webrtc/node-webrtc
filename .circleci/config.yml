version: 2

aliases:
  npm-version: &npm-version
    run:
      name: npm version
      command: npm version

  lint-javascript: &lint-javascript
    run:
      name: Lint JavaScript
      command: npm run lint

  test-javascript: &test-javascript
    run:
      name: Run Unit and Integration Tests
      command: npm test

  prepare-for-web-platform-tests: &prepare-for-web-platform-tests
    run:
      name: Setup /etc/hosts for Web Platform Tests
      command: |
        echo >>/etc/hosts 127.0.0.1	xn--lve-6lad.not-web-platform.test
        echo >>/etc/hosts 127.0.0.1	xn--lve-6lad.web-platform.test
        echo >>/etc/hosts 127.0.0.1	xn--n8j6ds53lwwkrqhv28a.not-web-platform.test
        echo >>/etc/hosts 127.0.0.1	www1.web-platform.test
        echo >>/etc/hosts 127.0.0.1	www2.web-platform.test
        echo >>/etc/hosts 127.0.0.1	not-web-platform.test
        echo >>/etc/hosts 127.0.0.1	web-platform.test
        echo >>/etc/hosts 127.0.0.1	www2.not-web-platform.test
        echo >>/etc/hosts 127.0.0.1	www1.not-web-platform.test
        echo >>/etc/hosts 127.0.0.1	www.not-web-platform.test
        echo >>/etc/hosts 127.0.0.1	www.web-platform.test
        echo >>/etc/hosts 127.0.0.1	xn--n8j6ds53lwwkrqhv28a.web-platform.test

  web-platform-tests: &web-platform-tests
    run:
      name: Run Web Platform Tests
      command: |
        # NOTE(mroberts): web-platform-tests use syntax incompatible with Node 6.
        if [[ ! $(node -v) =~ "v6" ]]; then
          npm run wpt:init
          npm run wpt:test
        fi

  bridge-test: &bridge-test
    run:
      name: Run Bridge Test
      command: npm run test:bridge

  linux-x86_64: &linux-x86_64
    working_directory: ~/node-webrtc

    docker:
      - image: buildpack-deps:xenial

    steps:
      - run:
          name: Install sudo
          command: |
            apt-get update
            apt-get install -y sudo

      - run:
          name: Install Node
          command: |
            cd ~
            curl -sL https://deb.nodesource.com/setup_$NODE_VERSION.x | sudo -E bash -
            sudo apt-get install -y nodejs

      - <<: *npm-version

      - run:
          name: Check Compiler Versions
          command: |
            gcc --version
            g++ --version

      - run:
          name: Install CMake
          command: |
            cd ~
            wget https://cmake.org/files/v3.12/cmake-3.12.3-Linux-x86_64.sh
            chmod +x cmake-3.12.3-Linux-x86_64.sh
            sudo ./cmake-3.12.3-Linux-x86_64.sh --skip-license
            sudo ln -s $(pwd)/bin/* /usr/local/bin
            rm cmake-3.12.3-Linux-x86_64.sh

      - checkout

      - run:
          name: npm install
          command: |
            # NOTE(mroberts): We have to reduce PARALLELISM during the build;
            # otherwise, we run out of memory.
            export PARALLELISM=2

            # NOTE(mroberts): This fixes up some odd behavior when untar-ing as
            # root.
            export TAR_OPTIONS=--no-same-owner

            # NOTE(mroberts): We aren't interested in downloading pre-built
            # binaries on the CI server.
            export SKIP_DOWNLOAD=true

            # NOTE(mroberts): We need `--unsafe-perm` to run the install script
            # as root.
            npm install --unsafe-perm

      - <<: *lint-javascript

      - run:
          name: Lint C++
          command: |
            if [[ -n "$DEBUG" ]]; then
              cd build
              make check
              make format
              cd ..
            fi
            if [[ -n $(git diff) ]]; then
              echo "You must run make format before submitting a pull request"
              echo ""
              git diff
              exit -1
            fi

      - <<: *test-javascript

      - <<: *prepare-for-web-platform-tests

      - <<: *web-platform-tests

      - run:
          name: Install Chrome and Firefox
          command: |
            sudo apt-get install -y \
              gconf-service \
              libasound2 \
              libatk1.0-0 \
              libatk-bridge2.0-0 \
              libc6 \
              libcairo2 \
              libcups2 \
              libdbus-1-3 \
              libexpat1 \
              libfontconfig1 \
              libgcc1 \
              libgconf-2-4 \
              libgdk-pixbuf2.0-0 \
              libglib2.0-0 \
              libgtk-3-0 \
              libnspr4 \
              libpango-1.0-0 \
              libpangocairo-1.0-0 \
              libstdc++6 \
              libx11-6 \
              libx11-xcb1 \
              libxcb1 \
              libxcomposite1 \
              libxcursor1 \
              libxdamage1 \
              libxext6 \
              libxfixes3 \
              libxi6 \
              libxrandr2 \
              libxrender1 \
              libxss1 \
              libxtst6 \
              ca-certificates \
              fonts-liberation \
              libappindicator1 \
              libnss3 \
              lsb-release \
              xdg-utils \
              wget
            cd node_modules/travis-multirunner
            export BVER=stable
            BROWSER=chrome ./setup.sh
            BROWSER=firefox ./setup.sh
            echo >> $BASH_ENV export CHROME_BIN=$(pwd)/browsers/bin/chrome-$BVER
            echo >> $BASH_ENV export FIREFOX_BIN=$(pwd)/browsers/bin/firefox-$BVER

      - <<: *bridge-test

  darwin-x86_64: &darwin-x86_64
    working_directory: ~/node-webrtc

    macos:
      xcode: "9.0"

    steps:
      - run:
          name: Install nvm
          command: curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash

      - run:
          name: Install Node
          command: |
            nvm install $NODE_VERSION
            nvm use $NODE_VERSION

      - <<: *npm-version

      - run:
          name: Install CMake
          command: brew install cmake

      - checkout

      - run:
          name: npm install
          command:
            # NOTE(mroberts): We aren't interested in downloading pre-built
            # binaries on the CI server.
            export SKIP_DOWNLOAD=true

            npm install

      - <<: *lint-javascript

      - <<: *test-javascript

      - <<: *web-platform-tests

jobs:
  linux-x86_64-node-11-debug:
    <<: *linux-x86_64
    environment:
      NODE_VERSION: 11
      DEBUG: true

  linux-x86_64-node-11-release:
    <<: *linux-x86_64
    environment:
      NODE_VERSION: 11

  darwin-x86_64-node-11-debug:
    <<: *darwin-x86_64
    environment:
      NODE_VERSION: 11
      DEBUG: true

  darwin-x86_64-node-11-release:
    <<: *darwin-x86_64
    environment:
      NODE_VERSION: 11

  linux-x86_64-node-10-debug:
    <<: *linux-x86_64
    environment:
      NODE_VERSION: 10
      DEBUG: true

  linux-x86_64-node-10-release:
    <<: *linux-x86_64
    environment:
      NODE_VERSION: 10

  darwin-x86_64-node-10-debug:
    <<: *darwin-x86_64
    environment:
      NODE_VERSION: 10
      DEBUG: true

  darwin-x86_64-node-10-release:
    <<: *darwin-x86_64
    environment:
      NODE_VERSION: 10

  linux-x86_64-node-8-debug:
    <<: *linux-x86_64
    environment:
      NODE_VERSION: 8
      DEBUG: true

  linux-x86_64-node-8-release:
    <<: *linux-x86_64
    environment:
      NODE_VERSION: 8

  darwin-x86_64-node-8-debug:
    <<: *darwin-x86_64
    environment:
      NODE_VERSION: 8
      DEBUG: true

  darwin-x86_64-node-8-release:
    <<: *darwin-x86_64
    environment:
      NODE_VERSION: 8

  linux-x86_64-node-6-debug:
    <<: *linux-x86_64
    environment:
      NODE_VERSION: 6
      DEBUG: true

  linux-x86_64-node-6-release:
    <<: *linux-x86_64
    environment:
      NODE_VERSION: 6

  darwin-x86_64-node-6-debug:
    <<: *darwin-x86_64
    environment:
      NODE_VERSION: 6
      DEBUG: true

  darwin-x86_64-node-6-release:
    <<: *darwin-x86_64
    environment:
      NODE_VERSION: 6

workflows:
  version: 2
  build:
    jobs:
      - linux-x86_64-node-11-debug
      - linux-x86_64-node-11-release
      # - darwin-x86_64-node-11-debug
      # - darwin-x86_64-node-11-release
      - linux-x86_64-node-10-debug
      - linux-x86_64-node-10-release
      # - darwin-x86_64-node-10-debug
      # - darwin-x86_64-node-10-release
      - linux-x86_64-node-8-debug
      - linux-x86_64-node-8-release
      # - darwin-x86_64-node-8-debug
      # - darwin-x86_64-node-8-release
      - linux-x86_64-node-6-debug
      - linux-x86_64-node-6-release
      # - darwin-x86_64-node-6-debug
      # - darwin-x86_64-node-8-release
